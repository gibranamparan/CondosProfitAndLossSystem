@using Sunvalley_PLSystem.Models
@model Sunvalley_PLSystem.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string userRole = ViewBag.roleName;
}

<div>
    <a href="@Url.Action("Index")">
        <i class="fa fa-arrow-left"></i>Back to users List
    </a>
</div>
@using (Html.BeginForm("Edit","Account",FormMethod.Post, new { autocomplete = "off"}))
{
    @Html.AntiForgeryToken()
    
    <div class="panel panel-warning">
        <div id="PanelHeading" class="panel-heading">
            Edit @userRole
        </div>
        <div id="PanelBody" class="panel-body">
            <div class="row">
                <div class="pull-right" style="margin-right: 1em">
                    <a href="@Url.Action("Disable", "activateOrDiseable", new { id = Model.Id })">
                        <span class="fa fa-ban"></span><span>Disable</span>
                    </a><span>|</span>
                    <a href="@Url.Action("Delete", new { id = Model.Id })">
                        <span class="fa fa-trash"></span><span>Delete</span>
                    </a>
                </div>
            </div>
            <div id="userPanel" class="row">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model=>model.createAt)

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.lastName, new { @class = "control-label" })
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>


                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.mobilePhone, new { @class = "control-label" })
                    @Html.EditorFor(model => model.mobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobilePhone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @*Html.LabelFor(model => model.Email, new { @class = "control-label" })*@
                    <label class="control-label">Email for Login</label>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.otrosEmail, new { @class = "control-label" })
                    @Html.EditorFor(model => model.otrosEmail, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.otrosEmail, "", new { @class = "text-danger" })
                </div>

                @if (User.IsInRole("Administrador"))
                {
                    <div class="form-group col-md-6">
                        <div class="col-md-8">
                            @Html.Label("New Password", htmlAttributes: new { @class = "control-label" })
                            <i class="fa fa-question-circle" onclick="$('#divStrongPasswordHelp').fadeToggle()"></i>
                            <input type="password" name="password" id="password_fake" class="hidden" autocomplete="off" style="display: none;">
                            <input class="form-control" data-val="true" data-val-length="The Password must be at least 6 characters long."
                                   data-val-length-max="100" data-val-length-min="6"
                                   id="NewPassword" name="NewPassword" autocomplete="off"
                                   placeholder="Introduce an strong password." type="password">
                        </div>
                        <div class="col-md-4">
                            <br />
                            <button class="btn btn-info" type="button" id="btnGeneratePassword">Generate</button>
                            <span>Show Password:</span><input type="checkbox" id="showPassword" value=" " />
                        </div>
                        <span class="field-validation-valid text-danger" data-valmsg-for="NewPassword" data-valmsg-replace="true"></span>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label" for="ConfirmPassword">Confirm password</label>
                        <input autocomplete="off" class="form-control" id="ConfirmPassword" name="ConfirmPassword" type="password">
                        <span class="field-validation-valid text-danger" data-valmsg-for="ConfirmPassword" data-valmsg-replace="true"></span>
                    </div>
                }
            </div>
            <div style="display:@(userRole== ApplicationUser.RoleNames.CLIENTE?"block":"none")" class="row" id="clientPanel">
                <fieldset>
                    <legend>Owner's Data</legend>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.company, new { @class = "control-label" })
                        @Html.EditorFor(model => model.company, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.company, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.adress1, new { @class = "control-label" })
                        @Html.EditorFor(model => model.adress1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.adress1, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.adress2, new { @class = "control-label" })
                        @Html.EditorFor(model => model.adress2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.adress2, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.city, new { @class = "control-label" })
                        @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.country, new { @class = "control-label" })
                        @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.state, new { @class = "control-label" })
                        @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.businesFax, new { @class = "control-label" })
                        @Html.EditorFor(model => model.businesFax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.businesFax, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.postalCode, new { @class = "control-label" })
                        @Html.EditorFor(model => model.postalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.postalCode, "", new { @class = "text-danger" })
                    </div>
                </fieldset>
            </div>
            <div class="row">
                <div class="form-group col-md-1">
                    <input type="submit" class="btn btn-default" value="Register" />
                </div>
                <div id="divStrongPasswordHelp" class="alert alert-info col-md-6" style="display:none">
                    A strong password must have 6 characters min. included lower & uppercase and non digit or letter character.
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function generatePassword() {
            var length = 8,
                charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
                retVal = "";
            for (var i = 0, n = charset.length; i < length; ++i) {
                retVal += charset.charAt(Math.floor(Math.random() * n));
            }
            return retVal;
        }

        $("#showPassword").click(function () {
            if ($(this).prop("checked"))
                $("#NewPassword").attr("type", "text")
            else
                $("#NewPassword").attr("type", "password")
        })

        $("#btnGeneratePassword").click(function () {
            $("#NewPassword").val(generatePassword());
        })

    </script>
}
